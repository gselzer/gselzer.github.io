---
import {Image} from 'astro:assets';
import me from '../../public/me.jpg';
---
<style>
	/* Typing Effect Animation */
	.typing-effect {
	font-family: var(--font-mono);
	border-right: 2px solid var(--accent-color);
	width: fit-content;
	/* margin: 2rem auto 0 auto; */
	overflow: hidden;
	letter-spacing: 1px;
	animation: blink-cursor 0.8s steps(1) infinite;
	/* Responsive font size that scales with screen width */
	font-size: clamp(1.2rem, 4vw, 2.5rem);
	max-width: 100%;
	/* Reserve space even when empty to prevent layout shift */
	min-height: 1.5em; /* Ensures consistent height based on font size */
	max-height: 1.5em; /* Matches min-height to prevent expansion */
	}

	@keyframes blink-cursor {
	0%, 100% { border-color: var(--accent-color); }
	50% { border-color: transparent; }
	}

	/* Side-by-side image and header */
	.header-image-row {
		display: flex;
		align-items: center;
		gap: 2rem;
		justify-content: flex-start;
		margin-top: 2rem;
	}
	@media screen and (max-width: 600px) {
		.header-image-row {
			display: flex;
			flex-direction: column;
			gap: 0rem;
		}
	}

	.profile-img {
	min-width: 120px;
	width: 120px;
	height: 120px;
	object-fit: cover;
	border-radius: 50%;
	box-shadow: 0 4px 16px rgba(0,0,0,0.15);
	}

</style>
<div class="header-image-row">
    <Image src={me} alt="A picture of me" class="profile-img" />
    <h1 class="typing-effect" id="greeting"></h1>
</div>
<script>
	// Typing effect for animated paragraph
	const greetings = [
		"Hi, I'm Gabe!",
		"Hallo, ich bin Gabe!",
		"嗨, 我是 Gabe!"
	];
	const typingSpeed = 50; // ms per character

	// Types out each greeting, waits, then clears it before moving to the next.
	function typeGreeting(element) {
	let i = 0;
	let idx = 0;
	let forwards = true;
	function type() {
		element.textContent = greetings[idx].slice(0, i);
		// Reached the end of the current greeting
		// Wait a bit before starting to delete
		if (forwards && i === greetings[idx].length) {
			forwards = false;
			setTimeout(type, 10000);
		// Fully deleted the current greeting
		// Switch to a new one after a short pause
		} else if (!forwards && i === 0) {
			forwards = true;
			idx = (idx + 1) % greetings.length;
			setTimeout(type, 500);
		}
		// Continue typing or deleting
		else {
			i = forwards ? i + 1 : i - 1;
			setTimeout(type, typingSpeed);
		}
	}
	type();
	}

	document.addEventListener("DOMContentLoaded", () => {
	const el = document.getElementById("greeting");
	if (el) {
		typeGreeting(el);
	}
	});
</script>
